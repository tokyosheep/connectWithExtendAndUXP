{"version":3,"file":"main.js","mappings":";;;;;;;;;;AAAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNsB;;AAEtB,WAAW,oEAA2B;;AAEtC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,OAAO;AAC5E;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA,4CAA4C,gBAAgB;AAC5D,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,CAAC;;;;AAID;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,4BAA4B,aAAa;AACzC,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C,CAAC,C","sources":["webpack://uxp-template-default-starter/external var \"require('uxp')\"","webpack://uxp-template-default-starter/webpack/bootstrap","webpack://uxp-template-default-starter/webpack/runtime/compat get default export","webpack://uxp-template-default-starter/webpack/runtime/define property getters","webpack://uxp-template-default-starter/webpack/runtime/hasOwnProperty shorthand","webpack://uxp-template-default-starter/webpack/runtime/make namespace object","webpack://uxp-template-default-starter/./src/index.js"],"sourcesContent":["module.exports = require('uxp');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import uxp from \"uxp\";\n\nconst fs = uxp.storage.localFileSystem;\n\n/** \n* getting saved entry file path and directory from localStorage.\n* @type {entry}\n**/\nconst getStoragePath = async() =>{\n    const f = await fs.getEntryForPersistentToken(await localStorage.getItem(\"watchFolder\"));\n    const entries = await f.getEntries();\n    const jsxFolder = entries.find(entry=>{\n        return entry.name === \"jsxes\" && entry.isFolder;\n    });\n    return {entries,jsxFolder};\n}\n\n/** \n* choose watch folder through dialog\n* any case you can't omit it due to the security reason\n**/\ndocument.getElementById(\"set\").addEventListener(\"click\",async()=>{\n    const f = await fs.getFolder();\n    console.log(f);\n    if(f===null)return;\n    document.getElementById(\"path_name\").textContent = `directory :${f.name}`;\n    await localStorage.setItem(\"watchFolder\",await fs.createPersistentToken(f));\n})\n\n/**\n* excute ExtendScript through node.js\n* writing in jsonData and node.js detects while watching json.\n**/\ndocument.getElementById(\"excute_jsx\").addEventListener(\"click\",async function(e){\n    if(this.disabled){\n        return;\n    }\n    this.disabled = true;\n    const msg = document.getElementById(\"arg\").value;\n    const jsxName = document.getElementById(\"jsxListmenu\").value;\n    try{\n        const {entries,jsxFolder} = await getStoragePath();\n        if(jsxFolder===undefined)return;\n        const msgJson = entries.find(entry=> entry.isFile && entry.name===\"msg.json\");\n        await msgJson.write(JSON.stringify({msg,jsx:jsxName}));\n    }catch(e){\n        console.log(e);\n    }finally{\n        this.disabled = false;\n    }\n});\n\n\n\n/**\n* listing jsx files on selector.\n* and user can select jsx from list.\n**/\ndocument.getElementById(\"setJsx\").addEventListener(\"click\",async()=>{\n    try{\n        const {jsxFolder} = await getStoragePath();\n        if(jsxFolder===undefined)return;\n        const jsxEntries = await jsxFolder.getEntries();\n        const jsxes = jsxEntries.filter(entry=>{\n            const extPlace = entry.nativePath.lastIndexOf(\".\");\n            const ext = entry.nativePath.substr(extPlace,entry.nativePath.length);\n            console.log(ext);\n            return entry.isFile && ext === \".jsx\";\n        });\n        const element = jsxes.reduce((acc,current)=>{\n            return acc + `\n            <sp-menu-item>${current.name}</sp-menu-item>`;\n        },\"\");\n        document.getElementById(\"jsxListmenu\").innerHTML = element;\n    }catch(e){\n        console.log(e);\n    }\n})\n\ndocument.getElementById(\"test\").addEventListener(\"click\",async()=>{\n    const f = await fs.getFileForSaving(\"save.json\");\n    console.log(f);\n    await f.write(JSON.stringify({v:\"hello\"}));\n})"],"names":[],"sourceRoot":""}